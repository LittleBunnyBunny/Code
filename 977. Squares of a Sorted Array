class Solution {
public:
    vector<int> sortedSquares(vector<int>& A) {
        if (A.size() == 0) {
            return {0};
        }
        if (A.size() == 1) {
            return {A[0]*A[0]};
        }
        vector<int> ans(A.size());
        int index = -1, t = 0;
        for (int i = 0; i < A.size(); ++i) {
            if (A[i] >= 0) {
                index = i;
                break;
            }
        }
        int j = index - 1;
        while (index < A.size() && j>=0) { 
            if(A[j] * A[j] < A[index] * A[index]) {
                ans[t++] = A[j] * A[j];
                j--;    
            } else {
                ans[t++] = A[index] * A[index];
                cout << index << endl;
                index++;
            }
        }
        while (j>=0) {
            ans[t++] = A[j] * A[j];
            j--;
        }
        while (index<A.size()) {
            ans[t++] = A[index] * A[index];
            index++;
        }
        return ans;
    }
};
