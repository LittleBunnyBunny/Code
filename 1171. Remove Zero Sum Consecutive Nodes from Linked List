/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeZeroSumSublists(ListNode* head) {
        ListNode* start = new ListNode(0);
        start -> next = head;
        ListNode* prev = start;
        ListNode* cur = head;
        int sum = 0;
        while (cur) {
            sum += cur -> val;
            if (sum == 0) {
                prev -> next = cur -> next;
            }
            cur = cur -> next;
            if (cur == NULL) {
                prev = prev -> next;
                if (prev == NULL) break;
                cur = prev -> next;
                sum = 0;
            }
        }
        return start -> next;
    }
};
