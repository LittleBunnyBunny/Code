/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if (l1 == NULL && l2 == NULL) {
            return NULL;
        }
        ListNode* ans = new ListNode(0, nullptr);
        ListNode* cur = ans;
        int carry = 0;
        int rem = 0, val = 0, val1 = 0, val2 = 0;
        while (l1 != NULL || l2 != NULL || carry) {
            val1 = (l1 == NULL) ? 0 : l1 ->val;
            val2 = (l2 == NULL) ? 0 : l2 ->val;
            val = val1 + val2 + carry;
            rem = val % 10;
            carry = val / 10;
            cur -> next = new ListNode(rem, nullptr);
            cur = cur -> next;
            l1 = (l1 == NULL) ? NULL : l1 -> next;
            l2 = (l2 == NULL) ? NULL : l2 -> next;
        }            
        return ans -> next;
    }
};
