/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<int> nextLargerNodes(ListNode* head) {
        vector<int> my_vector;
        vector<int> ans;
        while (head) {
            my_vector.push_back(head -> val);
            head = head -> next;
        }
        stack<int> my_stack;
        int size = my_vector.size();
        for (int i = size - 1; i >= 0; --i) {
            while (!my_stack.empty() && my_vector[i] >= my_stack.top()) {
                my_stack.pop();
            }
            if (my_stack.empty()) {
                ans.push_back(0);
            } else {
                ans.push_back(my_stack.top());
            }
            my_stack.push(my_vector[i]);
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
