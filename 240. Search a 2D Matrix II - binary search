class Solution {
    bool binarySearch (vector<vector<int>>& matrix, int target, int row) {
        int left = 0, right = matrix[row].size() - 1;
        while (left <= right) {
            int middle = left + (right - left) / 2;
            if (matrix[row][middle] == target) {
                return true;
            }
            if (target < matrix[row][middle]) {
                right = middle - 1;
            } else {
                left = middle + 1;
            }
        }
        return false;
    }
    
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if (matrix.size() == 0 || matrix[0].size() == 0) {
            return false;
        }
        bool find = false;
        for (int row = 0; row < matrix.size(); ++row) {
            find = binarySearch(matrix, target, row);
            if (find == true) {
                return true;
            }
        }
        return false;
    }
};
