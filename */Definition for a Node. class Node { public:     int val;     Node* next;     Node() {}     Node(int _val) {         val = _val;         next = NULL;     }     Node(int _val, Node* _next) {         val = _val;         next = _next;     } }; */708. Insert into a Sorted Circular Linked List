/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;

    Node() {}

    Node(int _val) {
        val = _val;
        next = NULL;
    }

    Node(int _val, Node* _next) {
        val = _val;
        next = _next;
    }
};
*/

class Solution {
public:
    Node* insert(Node* head, int insertVal) {
        if (head == NULL) {
            Node* node = new Node(insertVal);
            node -> next = node;
            return node;
        }
        Node* prev = head;
        Node* cur = head -> next;
        bool to_insert = false;
        do {
            if (insertVal >= prev -> val && insertVal <= cur -> val) {
                to_insert = true;
            } else if (prev -> val > cur -> val) {
                if (insertVal > prev -> val || insertVal < cur -> val) {
                    to_insert = true;                    
                }
            }
            if (to_insert) {
                prev -> next = new Node(insertVal, cur);
                return head;               
            }
            prev = cur;
            cur = cur -> next;
        } while (prev != head);
        prev -> next = new Node(insertVal, cur);
        return head;
    }
};
