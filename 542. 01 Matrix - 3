class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        vector<vector<int>> dist(matrix.size(), vector<int>(matrix[0].size(), INT_MAX - 1000000000));
        if (matrix.size() == 0 || matrix[0].size() == 0) {
            return dist;
        }
        for (int row = 0; row < matrix.size(); ++row) {
            for (int col = 0; col < matrix[0].size(); ++col) {
                if (matrix[row][col] == 0) {dist[row][col] = 0;}
                else {
                    if (row > 0) {dist[row][col] = min(dist[row][col], dist[row - 1][col] + 1);}
                    if (col > 0) {dist[row][col] = min(dist[row][col], dist[row][col - 1] + 1);}
                }
            }
        }
        for (int row = matrix.size() - 1; row >= 0; --row) {
            for (int col = matrix[0].size() - 1; col >= 0; --col) {
                if (row + 1 < matrix.size()) {dist[row][col] = min(dist[row][col], dist[row + 1][col] + 1);}
                if (col + 1 < matrix[0].size()) {dist[row][col] = min(dist[row][col], dist[row][col + 1] + 1);}
            }
        }
        return dist;
    }
};
