/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if (head == NULL || head -> next == NULL) {
            return head;
        }
        ListNode* l1 = new ListNode(0);
        ListNode* lesser = l1;
        ListNode* g1 = new ListNode(0);
        ListNode* greater = g1;
        ListNode* h1 = head;
        while (h1) {
            if (h1 -> val < x) {
                l1 -> next = new ListNode(h1 -> val);
                l1 = l1 -> next;
            } else {
                g1 -> next = new ListNode(h1 -> val);
                g1 = g1 -> next;
            }
            h1 = h1 -> next;
        }
        l1 -> next = greater -> next;
        return lesser -> next;
    }
};
