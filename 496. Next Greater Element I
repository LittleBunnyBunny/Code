class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2)     {
        vector<int> ans;
        if (nums1.empty() || nums2.empty()) {
            return ans;
        }
        stack<int> stack;
        unordered_map<int,int> map;
        stack.push(nums2[0]);
        for (int i = 1; i < nums2.size(); ++i) {
            while (!stack.empty() && nums2[i] > stack.top()) {
                map[stack.top()] = nums2[i];
                stack.pop();
            } 
            stack.push(nums2[i]);
        }
        while (!stack.empty()) {
            map[stack.top()] = -1;
            stack.pop();
        }
        for (int i = 0; i < nums1.size(); ++i) {
            if (map.find(nums1[i]) != map.end()) {
                ans.push_back(map.find(nums1[i]) -> second);
            }
        }
        return ans;
    }
};
