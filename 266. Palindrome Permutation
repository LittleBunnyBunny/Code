class Solution {
public:
    bool canPermutePalindrome(string s) {
        std::unordered_map<int,int> map;
        int n = s.size();
        char char_arr[n+1]; 
        strcpy(char_arr, s.c_str());
        for(int i = 0; i < n; i++) {
            cout << char_arr[i] << endl;
        }
        for(int i = 0; i < n; ++i) {
            map[char_arr[i]]++;
        }
        int count = 0;
        for (auto it=map.begin(); it!=map.end(); ++it) {
              count += (it -> second) % 2;
        }
        /*
        for(int i = 0; i < n; ++i) {
            count += map[char_arr[i]] % 2;
        }*/
        return count <= 1;
    }
};
