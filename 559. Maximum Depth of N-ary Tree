/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    int maxDepth(Node* root) {
        if (root == NULL) {
            return 0;
        }
        stack<pair<Node*, int>> my_stack;
        my_stack.push(make_pair(root, 1));
        int depth = 0, curr = 0;
        while (!my_stack.empty()) {
            Node* node = my_stack.top().first;
            curr = my_stack.top().second;
            my_stack.pop();
            depth = max(curr, depth);
            for (const auto ele : node -> children) {
                my_stack.push(make_pair(ele, curr + 1));
            }
        }
        return depth;
    }
};








