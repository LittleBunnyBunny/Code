/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public: 
    ListNode* plusOne(ListNode* head) {
        ListNode* dummy = new ListNode(0);
        dummy -> next = head;
        ListNode* slow = dummy;
        ListNode* fast = dummy;
        while (fast -> next != NULL) {
            fast = fast -> next;
            if (fast -> val != 9) {
                slow = fast;
            }
        }
        cout << slow -> val;
        slow -> val += 1;
        while (slow != fast) {
            slow = slow -> next;
            slow -> val = 0;
        }
        if (head -> val == 0) {
            return dummy;
        }
        return head;
    }
};
