/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {     
public:
    vector<int> postorder(Node* root) {
        vector<int> ans;
        if (root == NULL) {
            return ans;
        }
        stack<Node*> my_stack;
        my_stack.push(root);
        while (!my_stack.empty()) {
            Node* node = my_stack.top();
            my_stack.pop();
            ans.push_back(node -> val);
            if (node != NULL) {
                for (Node* ele:node -> children) {
                    my_stack.push(ele);
                }
            }
        }
        reverse(begin(ans), end(ans));
        return ans;
    }
};
