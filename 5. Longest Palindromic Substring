class Solution {
public:
    string longestPalindrome(string s) {
        if (s.empty()) {
            return "";
        }
        string ans = "";
        int final_l = 0, final_r = 0, l = 0, r = s.size() - 1, dis = 0;
        for (int i = 1; i < s.size() - 1; ++i) {
            if (s[i - 1] == s[i + 1]) {
                l = i - 1;
                r = i + 1;
                while (l >= 0 && r < s.size() && s[l] == s[r]) {
                    if ((r - l) > dis) {
                        dis = r - l;
                        final_l = l;
                        final_r = r;
                    }
                    ++r;
                    --l;
                }
            }
        }
        for (int i = 0; i < s.size() - 1; ++i) {
            if (s[i] == s[i + 1]) {
                l = i;
                r = i + 1;
                while (l >= 0 && r < s.size() && s[l] == s[r]) {
                    if ((r - l) > dis) {
                        dis = r - l;
                        final_l = l;
                        final_r = r;
                    }
                    ++r;
                    --l;
                }
            }
        }
        cout << dis;
        for (int i = final_l; i <= final_r; ++i) {
            ans += s[i];
        }
        return ans;
    }
};
