/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* h1 = l1;
        ListNode* h2 = l2;
        if (h1 == NULL) {
            return h2;
        }
        if (h2 == NULL) {
            return h1;
        }
        ListNode* ans = NULL;
        ListNode* cur = NULL;
        if (h1 -> val < h2 -> val) {
            ans = h1;
            cur = h1;
            h1 = h1 -> next;
        } else {
            ans = h2;
            cur = h2;
            h2 = h2 -> next;
        }
        while (h1 != NULL && h2 != NULL) {
            if (h1 -> val < h2 -> val) {
                cur -> next = h1;
                cur = cur -> next;
                h1 = h1 -> next;
            } else {
                cur -> next = h2;
                cur = cur -> next;
                h2 = h2 -> next;
            }
        }
        if (h1 == NULL) {
            cur -> next = h2;
        }    
        if (h2 == NULL) {
            cur -> next = h1;
        }
        return ans;
    }
};





