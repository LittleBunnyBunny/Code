/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    void DFS (TreeNode* root, vector<int>& my_vector) {
        if (root == NULL) {
            return;
        }
        if (root ->left == NULL && root -> right == NULL) {
            my_vector.push_back(root -> val);
        }
        DFS(root -> left, my_vector);
        DFS(root -> right, my_vector);
    }
    
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> my_vector1;
        vector<int> my_vector2;
        DFS(root1, my_vector2);
        DFS(root2, my_vector1);
        if (my_vector1.size() != my_vector2.size()) {
            return false;
        }
        for (int i = 0; i < my_vector1.size(); ++i) {
            if (my_vector1[i] != my_vector2[i]) {
                return false;
            }
        }
        return true;
    }
};
