class MyQueue {
    std::stack<int> stack;
    std::stack<int> temp;
    int val, top;
public:
    /** Initialize your data structure here. */
        MyQueue(){
            int val = 0, top = 0;
        }
    
    /** Push element x to the back of queue. */
    void push(int x) {
        if (stack.empty()) {
            top = x;
        }
        stack.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        while (!stack.empty()) {
            temp.push(stack.top());
            stack.pop();
        }
        int queue_front = temp.top();
        temp.pop();
        if (!temp.empty()) {
            top = temp.top();
        }
        while (!temp.empty()) {
            stack.push(temp.top());
            temp.pop();
        }
        return queue_front;
    }
    
    /** Get the front element. */
    int peek() {
        return top;
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        return stack.empty();
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
